<html lang='en'>

<head>
  <meta charset='UTF-8' />
  <meta name='viewport' content='width=device-width, initial-scale=1.0' />
  <title>Folder Page</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f0f0f0;
      height: 93vh;
      overflow: hidden;
    }

    .container {
      max-width: 50%;
      margin: 20px auto;
      padding: 20px;
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      position: relative;
      height: 100%;
      overflow-y: auto;
      /* Enable scrolling for the container */
    }

    h1 {
      text-align: center;
    }

    .folder-list {
      list-style-type: none;
      padding: 0;
    }

    .folder-list li {
      margin-bottom: 10px;
    }

    .folder-card {
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 4px;
      background-color: #f9f9f9;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .fixed-form {
      position: fixed;
      bottom: 1.5%;
      left: 30.2%;
      width: 200px;
      background-color: #f9f9f9;
      transform: translate(-50%, 50%);
    }

    .checkBoxCover {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .checkBoxSelectFoder {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .no-images-found {
      text-align: center;
    }

    .popup {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.5);
    }

    .popup-content {
      background-color: #fefefe;
      margin: 15% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
      max-width: 600px;
    }

    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }

    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
      cursor: pointer;
    }
  </style>
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
</head>

<body>
  <h1>{{folderById.name}}</h1>
  <div class="container">
    {{#if folderImg.length}}
    <ul class="folder-list">
      {{#each folderImg}}
      <li>
        <div class="folder-card" draggable="true" data-imgname="{{this.img_name}}" data-custom-value={{this._id}}>
          <p>{{changeUnixTime this.createdAt}} </p>
          <img src="/uploads/folder/{{this.img_name}}" id={{this._id}} width="200px" height="200px" />
          <h5>{{this.img_name}}</h5>
          <div class="checkBoxCover">
            <p>Set Cover Image </p>
            
            <input type="checkbox" class="coverPhoto" value="{{this.img_name}}" {{#if ../folderById.cover_img}}{{#if
              (isCoverChecked ../folderById.cover_img this.img_name)}}checked{{/if}}{{/if}} />
            {{!-- <input type="checkbox" class="coverPhoto" value="{{this.img_name}}" /> --}}
          </div>
          <button {{#if ../folderById.cover_img}}{{#if (isCoverChecked ../folderById.cover_img
            this.img_name)}}disabled{{/if}}{{/if}} class="openPopup" data-img-id="{{this._id}}">Move Image -></button>
        </div>
      </li>
      {{/each}}
    </ul>

    <!-- The pop-up -->
    <div class="popup" id="popup">
      <div class="popup-content">
        <span class="close" id="closePopup">&times;</span>
        <h2 style="text-align: center;">Select Folder</h2>
        <ul id="listContainer">
          {{#each newFolders}}
          <div class="checkBoxSelectFoder">
            <input type="checkbox" id="imageID" class="selectFolder" value="{{this._id}}" />
            <p style="padding: 5px;">{{this.name}}</p>
          </div>
          {{/each}}
        </ul>
      </div>
    </div>

    {{else}}
    <div class="no-images-found">
      <p>No images found.</p>
    </div>
    {{/if}}


    <form class="fixed-form">
      <input type="file" id="inputImage">
      <p id="fileErr" class="err text-danger"></p>
      <input type="hidden" id="folder" value="{{folderById.id}}">
      <button type="submit">Save</button>
    </form>
  </div>


</body>

<script>
  $(document).ready(function () {
    var folderId = $("#folder").val();
    // Drag and drop functionality
    document.querySelectorAll('.folder-card').forEach(item => {
      item.addEventListener('dragstart', handleDragStart, false);
      item.addEventListener('dragenter', handleDragEnter, false);
      item.addEventListener('dragover', handleDragOver, false);
      item.addEventListener('dragleave', handleDragLeave, false);
      item.addEventListener('drop', handleDrop, false);
      item.addEventListener('dragend', handleDragEnd, false);
    });

    let dragSrcEl = null;

    function handleDragStart(e) {
      this.classList.add('dragging');
      dragSrcEl = this;
      e.dataTransfer.effectAllowed = 'move';
      e.dataTransfer.setData('text/html', this.outerHTML); // Store the entire HTML content of the dragged item
    }

    function handleDragOver(e) {
      if (e.preventDefault) {
        e.preventDefault();
      }
      e.dataTransfer.dropEffect = 'move';
      return false;
    }

    function handleDragEnter(e) {
      this.classList.add('over');
    }

    function handleDragLeave(e) {
      this.classList.remove('over');
    }

    function handleDrop(e) {
      if (e.stopPropagation) {
        e.stopPropagation();
      }

      if (dragSrcEl !== this) {
        // Swap the HTML content of the dragged and dropped items
        dragSrcEl.outerHTML = this.outerHTML;
        this.outerHTML = e.dataTransfer.getData('text/html');

        // Get the IDs of the dragged and dropped items
        const draggedItemId = dragSrcEl.getAttribute('data-custom-value');
        const droppedItemId = this.getAttribute('data-custom-value');

        // Send the updated sequence/order information to the server
        updateSequenceOrder(draggedItemId, droppedItemId);
      }

      return false;
    }

    function handleDragEnd(e) {
      this.classList.remove('dragging');
    }

    // Function to update sequence/order in the database
    function updateSequenceOrder(draggedItemId, droppedItemId) {
      console.log(draggedItemId,'iiii',droppedItemId)
      // Send a request to the server with the IDs of the dragged and dropped items
      // Example using fetch:
      {{!-- fetch('/api/updateSequence', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          draggedItemId,
          droppedItemId
        })
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          console.log('Sequence/order updated successfully');
        })
        .catch(error => {
          console.error('Error updating sequence/order:', error);
        }); --}}
    }




















    // function for Set cover image
    const checkboxes = document.querySelectorAll('.folder-card input');
    checkboxes.forEach(checkbox => {
      checkbox.addEventListener('change', function () {
        if (this.checked) {
          checkboxes.forEach(cb => {
            if (cb !== this) {
              cb.checked = false;
            }
          });
        }
        checkboxes.forEach(img => img.classList.remove('selected'));
        this.classList.add('selected');
        setCoverImage(this.value);
      });
    });

    // Set cover image for folder
    function setCoverImage(ImageName) {
      const resDat = $.ajax({
        type: "PUT",
        url: "/folder/update/" + folderId,
        data: { cover_img: ImageName },
        encode: true,
        success: setTimeout(function (data) {
          console.log("Cover image updated successfully.");
          window.location.href = `/folder`;
        }, 500),
        error: function (xhr, status, error) {
          console.error("Error:", error, xhr.responseText);
        }
      })

    }

    // Form submission
    $("form").submit(function (event) {
      event.preventDefault();
      var err = false;
      $('.err').html('');

      const formData = new FormData();
      var folderId = $("#folder").val()
      var files = $('#inputImage')[0].files[0];
      formData.append('img_name', files.name); //names save to be on database
      formData.append('image', files); //save on folder
      formData.append('folderId', folderId) // save folderId

      var extArr = files.name.split('.');
      var lastIndex = extArr.length - 1;
      var extensions = ['svg', 'jpg', 'jpeg', 'png', 'gif', 'tiff', 'SVG', 'JPG', 'JPEG', 'PNG', 'GIF', 'TIFF'];
      var ext = extArr[lastIndex];

      if (!extensions.includes(ext)) {
        $('#fileErr').html('Invalid file');
        err = true;
      }

      for (var pair of formData.entries()) {
        console.log(pair);
      }

      if (!err) {
        fetch("/folder", {
          method: "post",
          body: formData,
        })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            console.log("Form data submitted successfully.");
            window.location.href = `/folder/${folderId}`;
          })
          .catch(error => {
            console.error("Error:", error);
            alert("Something went wrong!");
          });
      }
    });
  });


  //todo: Move image to other folder ---------------------------
  var popupButtons = document.querySelectorAll(".openPopup");
  popupButtons.forEach(function (button) {
    button.addEventListener("click", function () {
      var imgId = button.getAttribute("data-img-id");
      openPopup(imgId);
    });
  });

  function openPopup(imgId) {
    document.getElementById("popup").style.display = "block";
    // function for change folder id in image
    const checkboxes = document.querySelectorAll('.checkBoxSelectFoder input');
    checkboxes.forEach(checkbox => {
      checkbox.addEventListener('change', function () {
        moveImage(this.value);
      });
    });

    function moveImage(ImageName) {
      var folderId = $("#folder").val();
      const resDat = $.ajax({
        type: "PUT",
        url: "/folder/" + imgId,
        data: { folderId: ImageName },
        encode: true,
        success: setTimeout(function (data) {
          console.log("Cover image updated successfully.");
          window.location.href = `/folder/${folderId}`;
        }, 500),
        error: function (xhr, status, error) {
          console.error("Error:", error, xhr.responseText);
        }
      })
    }
  }
  document.getElementById("closePopup").addEventListener("click", function () {
    document.getElementById("popup").style.display = "none";
  });

</script>


</html>